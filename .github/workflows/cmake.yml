# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
  latest-cpp:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure system
      run: |
          sudo apt-get -y update
          sudo apt-get -y install libboost-test-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  latest-boost:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download Boost
      run: |
        git clone https://github.com/boostorg/boost --depth 1
        cd boost
        git submodule update --init
        ./bootstrap.sh
        ls -all
        cd ..
        ln -s . boost/libs/boost-multi
        cd boost/libs
        pwd
        cd boost-multi/test
        pwd
        ls ../../../
        ../../../b2

  latest-cpp32:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure system
      run: |
          sudo apt-get -y update
          sudo apt-get -y install g++-multilib libboost-test-dev
          wget https://downloads.sourceforge.net/project/boost/boost/1.84.0/boost_1_84_0.tar.gz --no-verbose
          tar -xf boost_1_84_0.tar.gz 
          cd boost_1_84_0
          ./bootstrap.sh
          sudo ./b2 cxxflags=-m32 --with-serialization --with-test --with-timer install -j4

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="-m32"

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  latest-clangpp:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure system
      run: |
          sudo apt-get -y update
          sudo apt-get -y install clang libboost-test-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=clang++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  macos-cpp:
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4

    - name: Configure system
      run: |
          brew install boost

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  # macos-gpp:
  #   runs-on: macos-14

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Configure system
  #     run: |
  #         brew install boost gcc@13

  #   - name: Configure CMake
  #     run: |
  #       g++-13 --version
  #       cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=g++-13 -DCMAKE_CXX_STANDARD=23 -DCMAKE_CXX_FLAGS="-Wl,-ld_classic"  # https://developer.apple.com/forums/thread/737707?answerId=765203022#765203022

  #   - name: Build
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --verbose

  #   - name: Test
  #     working-directory: ${{github.workspace}}/build
  #     run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
