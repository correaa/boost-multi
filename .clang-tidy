# Copyright 2020-2025 Alfredo A. Correa

WarningsAsErrors: '*'
HeaderFilterRegex: '.'
FormatStyle: file

CheckOptions:
  - { key: readability-identifier-naming.ClassCase                         , value: lower_case }
  - { key: readability-identifier-naming.FunctionCase                      , value: lower_case }
  - { key: readability-identifier-naming.GlobalConstantCase                , value: aNy_CasE   }
  - { key: readability-identifier-length.IgnoredLoopCounterNames           , value: "^[ijk_]$" }
  - { key: readability-identifier-length.IgnoredVariableNames              , value: "^[ijk_]$" }
  - { key: readability-identifier-length.MethodCase                        , value: lower_case }
  - { key: readability-identifier-length.MinimumLoopCounterNameLength      , value: 2          }
  - { key: readability-identifier-length.MinimumParameterNameLength        , value: 2          }
  - { key: readability-identifier-length.MinimumVariableNameLength         , value: 2          }
  - { key: readability-identifier-naming.NamespaceCase                     , value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix               , value: ''         }
  - { key: readability-identifier-naming.PrivateMemberSuffix               , value: _          }
  - { key: readability-identifier-naming.PrivateMethodSuffix               , value: _          }
  - { key: readability-identifier-naming.StructCase                        , value: lower_case }
  - { key: readability-identifier-naming.TemplateParameterCase             , value: CamelCase  }
  - { key: readability-identifier-naming.TypeTemplateParameterIgnoredRegexp, value: expr-type}
  - { key: readability-operators-representation.BinaryOperators            , value: '&&;&=;&;|;~;!;!=;||;|=;^;^='}

Checks: '*,
  -altera-struct-pack-align,
  -boost-use-ranges,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-macro-usage,
  -fuchsia-default-arguments-calls,
  -fuchsia-overloaded-operator,
  -fuchsia-trailing-return,
  -llvmlibc-*,
  -modernize-use-nodiscard,
  -readability-magic-numbers'

#  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
#  -hicpp-no-array-decay,                                 // for Boost Lightweight Test
#  -llvm-header-guard,                                    // allow PCH
#  -misc-include-cleaner                                  // allow PCH
#  readability-simplify-boolean-expr,                     // for Boost Lightweight Test BOOST_TEST

## explanation of the suppressed rules above:
#  -altera-struct-pack-align,                             // this asks to use non-standard pragmas such as __attribute__((aligned(0))) and _attribute__((packed)), may interfeere with gcc/nvcc compatibility?
#  -boost-use-ranges                                      // would introduce a dependency on Boost
#  -cppcoreguidelines-avoid-magic-numbers,                // all tests use magic numbers
#  -cppcoreguidelines-macro-usage,                        // BLAS adaptors uses a lot of macros
#  -fuchsia-default-arguments-calls,                      // this library uses STL functions, which use default arguments
#  -fuchsia-overloaded-operator,                          // this library overloads operators (==, <, +, &)
#. -fuchsia-trailing-return,                              // asks all functions to be pure 'auto'
#  -llvmlibc-*,                                           // nonsense warnings, for llvm developers
#  -modernize-use-nodiscard,                              // this would add [[nodiscard]] to almost all functions, adding a lot of noise
#  -readability-magic-numbers,                            // many tests use magic numbers
