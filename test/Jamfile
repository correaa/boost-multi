# Copyright 2024 Matt Borland
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

import testing ;
import ../../config/checks/config : requires ;

project : requirements

  <library>/boost/test//boost_unit_test_framework

  <toolset>gcc:<cxxflags>-Wall
  <toolset>gcc:<cxxflags>-Wextra

  <toolset>clang:<cxxflags>-Wall
  <toolset>clang:<cxxflags>-Wextra

  <toolset>msvc:<warnings>all

  # Additional flags by request
  <toolset>gcc:<cxxflags>-Wsign-conversion
  <toolset>gcc:<cxxflags>-Wconversion
  <toolset>gcc:<cxxflags>-Wundef
  <toolset>gcc:<cxxflags>-Wold-style-cast
  <toolset>gcc:<cxxflags>-Wduplicated-branches
  <toolset>gcc:<cxxflags>-Wfloat-equal

  <toolset>clang:<cxxflags>-Wsign-conversion
  <toolset>clang:<cxxflags>-Wconversion
  <toolset>clang:<cxxflags>-Wundef
  <toolset>clang:<cxxflags>-Wold-style-cast
  <toolset>clang:<cxxflags>-Wfloat-equal

  <toolset>msvc:<warnings-as-errors>on
  <toolset>clang:<warnings-as-errors>on
  <toolset>gcc:<warnings-as-errors>on

  [ requires cxx17_if_constexpr cxx17_structured_bindings cxx17_std_apply ]
  ;

run allocator.cpp ;
run array_cref.cpp ;
run array_fancyref.cpp ;
run array_legacy_c.cpp ;
run array_ptr.cpp ;
run array_ref.cpp ;
run array_vector_substitutability.cpp ;
run assignments.cpp ;
#run boost_array_concept.cpp ;
run comparisons.cpp ;
run concepts.cpp ;
