#!/bin/bash
# -*-indent-tabs-mode:t;c-basic-offset:4;tab-width:4;autowrap:nil;-*-
# sudo apt install ccache clang clang-tidy cmake cppcheck g++ git iwyu lcov libblas-dev pkg-config libfftw3-dev libboost-test-dev libboost-timer-dev make ninja-build valgrind
# sudo dnf install boost-devel blas-devel ccache clang clang-tools-extra cmake cppcheck fftw-devel git lcov libasan liblas-devel libubsan ninja-build valgrind
# install circle # mkdir -p $HOME/bin && wget https://www.circle-lang.org/linux/build_latest.tgz -P $HOME/tmp/ && tar zxvf $HOME/tmp/build_latest.tgz --directory $HOME/bin/ && $HOME/bin/circle --version
# install nvc++  # ($ echo 'deb [trusted=yes] https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64 /' | sudo tee /etc/apt/sources.list.d/nvhpc.list) && sudo apt-get updatesudo apt-get update && sudo apt-get install nvhpc-22-7
#                # sudo yum-config-manager --add-repo https://developer.download.nvidia.com/hpc-sdk/rhel/nvhpc.repo && sudo yum install -y nvhpc-cuda-multi-23.1

#CXX=g++-12 cmake --fresh .. -DENABLE_CUDA=1 -DCMAKE_CUDA_COMPILER=nvcc -DCMAKE_CUDA_HOST_COMPILER=g++-12 -DCMAKE_CUDA_ARCHITECTURES=61

export VALGRIND_EXE="valgrind --leak-check=full --track-origins=yes --show-leak-kinds=all --suppressions=.valgrind_suppressions --gen-suppressions=all --error-exitcode=1 "

export CMAKE_GENERATOR=Ninja

export CMAKE_CUDA_COMPILER_LAUNCHER="ccache"
export CMAKE_CXX_COMPILER_LAUNCHER="ccache"

 (mkdir -p .build.g++           && cd .build.g++           && CXX=g++                                                       cmake .. -DCMAKE_BUILD_TYPE=Debug                                                                                                                                                        && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.clang++       && cd .build.clang++       && CXX=clang++                                                   cmake .. -DCMAKE_BUILD_TYPE=Debug                                                                                                                                                        && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.circle        && cd .build.circle        && CXX="$HOME/bin/circle"                                        cmake .. -DCMAKE_BUILD_TYPE=Debug   -DENABLE_CIRCLE=1                                                                                                                                    && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.g++.m32.std23 && cd .build.g++.m32.std23 && CXX=g++ CXXFLAGS="-m32"                                       cmake .. -DCMAKE_BUILD_TYPE=Debug   -DCMAKE_CXX_STANDARD=23                                                                                                                              && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.icpx          && cd .build.icpx          && CXX=/opt/intel/oneapi/compiler/latest/bin/icpx                cmake .. -DCMAKE_BUILD_TYPE=Release                                                                                                                                                      && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.nvc++         && cd .build.nvc++         && CXX=/opt/nvidia/hpc_sdk/Linux_x86_64/2024/compilers/bin/nvc++ cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-stdpar=multicore"                                                                                                                && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.nvcc          && cd .build.nvcc          &&                                                               cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_CUDA=1 -DCMAKE_CUDA_COMPILER=nvcc       -DCMAKE_CUDA_HOST_COMPILER=g++-12     -DCMAKE_CXX_COMPILER=g++-12     -DCMAKE_CUDA_ARCHITECTURES=75 && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.culang        && cd .build.culang        &&                                                               cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_CUDA=1 -DCMAKE_CUDA_COMPILER=clang++-17 -DCMAKE_CUDA_HOST_COMPILER=clang++-17 -DCMAKE_CXX_COMPILER=clang++-17 -DCMAKE_CUDA_ARCHITECTURES=75 && cmake --build . && ctest -j 12 --output-on-failure) || exit 666
 (mkdir -p .build.g++.plus      && cd .build.g++.plus      && CXX=g++                                                       cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=23 -DBLA_VENDOR=OpenBLAS -DCMAKE_CXX_CPPCHECK="cppcheck;--enable=all;--suppress=missingIncludeSystem;--inline-suppr;--std=c++17;--check-config;--error-exitcode=1" -DCMAKE_CXX_FLAGS="-D_GLIBCXX_DEBUG=1" -DCMAKE_CXX_FLAGS="-fanalyzer -Wno-analyzer-null-dereference -Wno-analyzer-possible-null-dereference -Wno-analyzer-malloc-leak -Wno-analyzer-use-of-uninitialized-value -Wno-analyzer-use-after-free" && cmake --build . && ctest -j 12 --output-on-failure -T memcheck) || exit 666
 (mkdir -p .build.clang++.plus  && cd .build.clang++.plus  && CXX=clang++                                                   cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_CLANG_TIDY="clang-tidy" -DCMAKE_CXX_INCLUDE_WHAT_YOU_USE="iwyu;-Xiwyu;--mapping_file=/home/correaa/boost-multi/.iwyu-test.imp"                                     && cmake --build . && ASAN_OPTIONS="new_delete_type_mismatch=0" ctest -j 12 --output-on-failure) || exit 666
#(mkdir -p .build.hip           && cd .build.hip           && CXX=clang++                                                   cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_HIP_COMPILER=/opt/rocm/llvm/bin/clang++ -DCMAKE_CXX_FLAGS="-DMULTI_USE_HIP" -DCMAKE_HIP_FLAGS="-DMULTI_USE_HIP" -DENABLE_HIP=1 -DCMAKE_HIP_ARCHITECTURES=gfx90a                                                                                                      && cmake --build .                                   ) || exit 666
#(mkdir -p .build.g++-.cov      && cd .build.g++-.cov      && CXX=g++                                                       cmake .. -DCMAKE_BUILD_TYPE=Debug   -DCMAKE_CXX_FLAGS="--coverage -lgcov -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_EXE_LINKER_FLAGS="-lgcov --coverage"       && cmake --build . && ASAN_OPTIONS="new_delete_type_mismatch=0" ctest -j 12 --output-on-failure -T Test `# && lcov --directory . --capture --output-file coverage.info && lcov --remove coverage.info '/usr/*' --output-file coverage.info && lcov --list coverage.info && genhtml coverage.info`) || exit 666

# find ./detail/ -name "*.hpp" \( -exec iwyu -std=c++17 -Xiwyu --mapping_file=/usr/share/include-what-you-use/stl.c.headers.imp -Xiwyu --mapping_file=$HOME/boost-multi/.iwyu-test.imp  -Xiwyu --error=0 -Xiwyu --max_line_length=200 -Xiwyu --quoted_includes_first -Xiwyu --cxx17ns {} -I$HOME/boost-multi/include/ \; -o -quit \)

## sudo setfacl --modify user:correaa:rw /var/run/docker.sock
# gitlab-runner exec docker rocm
