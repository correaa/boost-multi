[
    { "include": ["@<boost/preprocessor/arithmetic/dec.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/arithmetic/limits/dec_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/seq/elem.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/seq/size.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/variadic/elem.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/control/expr_iif.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/detail/auto_rec.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/detail/limits/auto_rec_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/repetition/detail/for.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/repetition/detail/limits/for_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/repetition/for.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/seq/limits/elem_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/seq/limits/size_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/tuple/elem.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/variadic/limits/elem_64.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/comparison/not_equal.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/control/iif.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/logical/bool.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/logical/compl.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/comparison/limits/not_equal_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/preprocessor/logical/limits/bool_256.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tools/assertion.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tools/collection_comparison_op.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tools/cstring_comparison_op.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tools/interface.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tools/fpc_op.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tools/old/interface.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tree/auto_registration.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tree/decorator.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tree/test_unit.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/tree/global_fixture.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/unit_test_suite.hpp>", "private", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/framework.hpp>", "public", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/unit_test_log.hpp>", "public", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/utils/basic_cstring/basic_cstring.hpp>", "public", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/utils/basic_cstring/basic_cstring_fwd.hpp>", "public", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/utils/lazy_ostream.hpp>", "public", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/utils/wrap_stringstream.hpp>", "public", "<boost/test/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/impl/test_tree.ipp>", "private", "<boost/test/included/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/impl/decorator.ipp>", "private", "<boost/test/included/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/impl/framework.ipp>", "private", "<boost/test/included/unit_test.hpp>", "public"] },
    { "include": ["@<boost/test/unit_test.hpp>", "public", "<boost/test/included/unit_test.hpp>", "public"] },
    { "include": ["@<boost/mpl/aux_/preprocessed/gcc/list.hpp>", "private", "<boost/mpl/list.hpp>", "public"] },
    { "include": ["@<boost/iterator/iterator_facade.hpp>", "private", "<boost/multi_array.hpp>", "public"] },
    { "include": ["@<bits/chrono.h>", "private", "<chrono>", "public"] },
    { "include": ["@<bits/utility.h>", "private", "<tuple>", "public"] },
    { "include": ["@<bits/memory_resource.h>", "private", "<memory_resource>", "public"] },
    { "include": ["@<assert.h>", "public", "<cassert>", "public"] },
    { "include": ["@<stdint.h>", "public", "<cstdint>", "public"] },
    { "include": ["@<math.h>", "public", "<cmath>", "public"] },
    { "include": ["@<stdlib.h>", "public", "<cstdlib>", "public"] },
    { "include": ["@<stdlib.h>", "public", "<cmath>", "public"] },
    { "include": ["@<ext/alloc_traits.h>", "private", "<memory>", "public"]},
    { "include": ["@<shared_mutex>", "public", "<utility>", "public"]},
    { "include": ["@<__assert>", "private", "<cassert>", "public"] },
    { "include": ["@<__fwd/ostream.h>", "private", "<ostream>", "public"] },
    { "include": ["@<__fwd/sstream.h>", "private", "<sstream>", "public"] },
    { "include": ["@<functional>", "public", "<boost/core/lightweight_test.hpp>", "public"] },
    { "include": ["@<bits/std_abs.h>", "private", "<cstdlib>", "public"] },
    { "include": ["@<__bit_reference>", "private", "<utility>", "public"] },
    { "include": ["@<__fwd/string_view.h>", "private", "<string_view>", "public"] }
]
