# # Copyright 2020-2025 Alfredo A. Correa

image: debian:stable

workflow:
  auto_cancel:
    on_new_commit: interruptible
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CODECOV_TOKEN: "999feb5b-a599-4d02-b9c5-46d977247f3a"
  RT_VERSION: "0.1"
  NVIDIA_DISABLE_REQUIRE: 1  # disable nvidia driver check
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

g++:  # debian-stable: default is gcc 12.2.0 as of April 2024
  stage: build
  interruptible: false
  script:
    - apt-get -qq update && apt-get -qq install --no-install-recommends -y --quiet ca-certificates cmake g++ make libboost-timer-dev libboost-serialization-dev libblas-dev liblapack-dev libfftw3-dev pkg-config
    - g++ --version
    - mkdir build && cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-D_GLIBCXX_DEBUG=1"
    - cmake --build . --parallel 2 || cmake --build . --verbose
    - ctest -j 2 --output-on-failure -T Test

clang++:
  stage: build
  tags:
    - non-shared
  interruptible: false
  script:
    - apt-get -qq update && apt-get -qq install --no-install-recommends -y --quiet clang cmake make libboost-timer-dev libboost-serialization-dev libblas-dev libfftw3-dev liblapack-dev pkg-config
    - mkdir build && cd build
    - clang++ --version
    - CXX=clang++ cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-D_GLIBCXX_DEBUG=1"
    - cmake --build . --parallel 2 || cmake --build . --parallel 1 --verbose
    - ctest -j 2 --output-on-failure

clang++-latest libc++:
  stage: build
  image: debian:latest
  tags:
    - non-shared
  interruptible: true
  script:
    - apt-get -qq update && apt-get -qq install --no-install-recommends -y --quiet ca-certificates clang cmake make libboost-timer-dev libboost-serialization-dev libblas-dev libc++-dev libc++abi-dev libfftw3-dev liblapack-dev pkg-config tar wget
    - mkdir build && cd build
    - clang++ --version
    - CXX=clang++ cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-stdlib=libc++ -DBOOST_NO_CXX98_FUNCTION_BASE -D_LIBCPP_ENABLE_CXX17_REMOVED_AUTO_PTR -D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_DEBUG"
    - cmake --build .
    - ctest -j 2 --output-on-failure
  needs: ["clang++"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - except:
        - tags:
          - gitlab-org

vs2019-windows:
  stage: build
  only:
    refs:
      - master
  allow_failure: true
  interruptible: true
  variables:
    BOOST_ROOT: ${CI_PROJECT_DIR}/vcpkg/installed/x64-windows
  script:
    - choco --version
    - choco install -y visualstudio2019community poshgit
    - git clone --depth=1 https://github.com/microsoft/vcpkg.git
    - .\vcpkg\bootstrap-vcpkg.bat
    - .\vcpkg\vcpkg install boost-multi-array boost-timer
    - mkdir build
    - cmake --version
    - cmake -S . -B build -DCMAKE_CXX_STANDARD=23
    - cmake --build build --config Release --parallel 2 --verbose
    - $env:Path += ";${CI_PROJECT_DIR}/vcpkg/installed/x64-windows/bin"
    - ctest --test-dir build --output-on-failure -C Release
  tags:
    - saas-windows-medium-amd64
  needs: ["clang++", "g++"]
  timeout: 30 minutes

clang++-latest-m32:
  stage: build
  image: debian:latest
  tags:
    - non-shared
  interruptible: true
  script:
    - dpkg --add-architecture i386
    - apt-get -qq update && apt-get -qq install --no-install-recommends -y --quiet ca-certificates clang g++ g++-multilib git cmake make libboost-serialization-dev:i386 tar wget
    - mkdir build && cd build
    - c++ --version
    - CXX=clang++ cmake .. -DCMAKE_CXX_FLAGS="-m32" -DCMAKE_BUILD_TYPE=Debug
    - cmake --build .
    - ctest -j 2 --output-on-failure
  needs: ["clang++"]

