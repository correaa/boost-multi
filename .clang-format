# https://clang-format-configurator.site
# Copyright 2020-2024 Alfredo A. Correa
---
Language: Cpp
AccessModifierOffset: -3
AlignAfterOpenBracket: BlockIndent
AlignArrayOfStructures: Right
AlignConsecutiveAssignments:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
AlignConsecutiveDeclarations:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: false
AlignOperands: AlignAfterOperator
AllowAllArgumentsOnNextLine: false
AllowShortLambdasOnASingleLine: Inline
AllowShortCaseLabelsOnASingleLine: true
AlwaysBreakTemplateDeclarations: No
BreakInheritanceList: BeforeComma
BraceWrapping:
  BeforeLambdaBody: false
ColumnLimit: 0
QualifierAlignment: Right
ConstructorInitializerIndentWidth: 0
ContinuationIndentWidth: 4
Cpp11BracedListStyle: true
FixNamespaceComments: true
IncludeBlocks: Regroup
IncludeCategories:
  - Regex: <boost/test/unit_test\.hpp>
    Priority: 1
  - Regex: <(boost\/multi)\/
    Priority: 2
  - Regex: <([A-Za-z0-9\Q/-_\E])+>
    Priority: 6
  - Regex: <(catch2|boost)\/
    Priority: 5
  - Regex: <([A-Za-z0-9.\Q/-_\E])+>
    Priority: 4
  - Regex: '"([A-Za-z0-9.\Q/-_\E])+"'
    Priority: 3
IndentPPDirectives: BeforeHash
IndentWidth: 4
# LambdaBodyIndentation: Signature
PenaltyBreakTemplateDeclaration: 10
PointerAlignment: Left
SpaceAfterTemplateKeyword: false
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: Custom
SpaceBeforeParensOptions:
  AfterControlStatements: false
SpacesBeforeTrailingComments: 2
SpacesInLineCommentPrefix:
  Minimum: 1
Standard: c++17
TabWidth: 4
UseTab: ForContinuationAndIndentation
WhitespaceSensitiveMacros:
  - BOOST_REQUIRE
  - BOOST_TEST
  - BOOST_TEST_REQUIRE
  - BOOST_AUTO_TEST_CASE
